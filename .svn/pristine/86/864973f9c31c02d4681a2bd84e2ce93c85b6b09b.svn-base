<template>
  <div class="layout_chart">
    <div id="myChart" ref="chart"></div>
  </div>
</template>

<script>
export default {
  props: {
    chartType: {
      type: String
    },
    option: {
      type: Object,
      default: () => {}
    }
  },
  watch: {
    option(option) {
      this.drawLine(option);
    }
  },
  mounted() {
    this.init();
    window.addEventListener("resize", () => {
      this.myChart.resize();
    });
  },
  methods: {
    // 初始化
    init() {
      let myChart = this.$echarts.init(this.$refs.chart);
      this.myChart = myChart;
      this.drawLine();
    },
    drawLine() {
      // 绘制图表
      this.myChart.setOption(this.option);
      if (this.chartType == "weather") {
        this.myChart.showLoading();
        this.$store.dispatch("getWeatherMsg").then(res => {
          let optionTemp = {
            date: [],
            tem: []
          };
          res.hours.forEach(item => {
            let date = item.day.substring(item.day.length - 3);
            optionTemp.date.push(date);
            let tem = item.tem.substring(0, item.tem.length - 1);
            optionTemp.tem.push(tem);
          });
          console.log(optionTemp);
          this.myChart.hideLoading();
          this.myChart.setOption({
            xAxis: { data: optionTemp.date },
            series: [
              {
                data: optionTemp.tem
              }
            ]
          });
        });
      }
    }
  }
};
</script>
<style lang="scss" scoped>
.layout_chart {
  width: 100%;
  height: 100%;
  // background-color: #0000ff;
}
#myChart {
  width: 100%;
  height: 100%;
}
</style>
